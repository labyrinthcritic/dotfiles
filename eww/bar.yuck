(defwindow bar
	:monitor 0
	:geometry (geometry
		:width "100%"
		:anchor "top center"
	)
	:stacking "bg"
	:reserve (struts :distance "64px" :side "top")
	:windowtype "dock"
	:wm-ignore false
	(bar)
)

(defwidget bar []
	(centerbox
		(workspaces)
		(clock)
		(indicators)
	)
)

(defwidget workspaces []
	(box
		:halign "start"
		:class "workspaces item"
		(for workspace in workspaces
			(box
				:class {workspace == selected_workspace ? "button-selected" : ""} 
				(button
					:onclick "~/bin/change_workspace.sh ${workspace}"
					{workspace}
				)
			)
		)
	)
)

(defwidget clock []
	(box 
		:class "item"
		(label :text "${time}")
	)
)

(defwidget indicators []
	(box
		:halign "end"
		:space-evenly false
		:orientation "h"
		(box :class "item" :space-evenly false
			(label :class "symbol disk-symbol" :text "")
			{round(EWW_DISK["/"].used_perc, 0) + "%"}
		)
		(box :class "item" :space-evenly false
			(label :class "symbol cpu-symbol" :text "")
			{round(EWW_CPU.avg, 0) + "%"}
		)
		(box :class "item" :space-evenly false
			(label :class "symbol memory-symbol" :text "")
			{round(EWW_RAM.used_mem_perc, 0) + "%"}
		)
		(box :class "item" :space-evenly false
			(label :class "symbol battery-symbol" :text "")
			{EWW_BATTERY.BAT0.capacity + "%"}
		)
		(box :class "item" :space-evenly false
			(label :class "symbol volume-symbol" :text "墳")
			{volume + "%"}
		)
		(box :class "item" :space-evenly false
			(label :class "symbol network-symbol" :text "")
			{network}
		)
	)
)

(defpoll time :interval "1s"
	"date '+%Y-%m-%d %H:%M:%S'"
)

(defpoll volume :interval "1s"
	"pulsemixer --get-volume | cut -d ' ' -f 1"
)

(defpoll network :interval "5s"
	"iw wlan0 info | grep -Po '(?<=ssid ).*' || echo 'not connected'"
)

(defvar workspaces "[1, 2, 3, 4, 5]")

(defvar selected_workspace 1)
